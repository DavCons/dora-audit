services:
  # üîß  Uruchamiany jako pierwszy. Czy≈õci zombie `docker-proxy` na :80 i :8080.
  cleanup-proxy:
    image: alpine:latest
    container_name: cleanup-proxy
    command: >
      sh -c '
        echo "üßπ  Cleaning zombie docker-proxy on :80 and :8080...";
        for PORT in 80 8080; do
          PIDS="$(ps -ef | grep "[d]ocker-proxy.*:${PORT}" | awk "{print \$2}")";
          if [ -n "$PIDS" ]; then
            echo "Killing docker-proxy on :$PORT -> $PIDS";
            kill -9 $PIDS || true;
          else
            echo "‚úÖ  No docker-proxy processes found on :$PORT";
          fi
        done
      '
    network_mode: host
    restart: "no"

  streamlit-app:
    image: ghcr.io/davcons/dora-audit-app:latest
    env_file: ./app.env
    ports:
      - "8501:8501"
    restart: unless-stopped

  site:
    depends_on:
      - cleanup-proxy
    image: ghcr.io/davcons/dora-audit-site:latest
    # Je≈õli nie chcesz, usu≈Ñ "80:80" i zostaw tylko 8080:80
    ports:
      - "80:80"
      - "8080:80"
    volumes:
      # Tw√≥j server config (proxy /api/request-magic-link, CSP, rate-limit, 444)
      - ./nginx/conf.d/10-site.conf:/etc/nginx/conf.d/10-site.conf:ro
      # Wy≈ÇƒÖcz domy≈õlny server z obrazu (je≈õli istnieje) ‚Äì pusty plik
      - ./nginx/conf.d/blank.conf:/etc/nginx/conf.d/default.conf:ro
      # Sekret z tokenem Bearer dla proxowanego wywo≈Çania do Supabase
      - ./secrets/edge_function_token.conf:/etc/nginx/includes/edge_function_token.conf:ro

    restart: unless-stopped
